# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - myAIBotAppService

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --cache-dir ~/.cache/pip -r requirements.txt
        
      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Zip artifact for deployment
        run: |
          zip -r release.zip . -x "venv/*" ".git/*" ".github/*" "*.zip" "release.zip"

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_6B03F930AFAF4B1D96FABDE33BB5A168 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_2FB6A7F7C85F434DB4EEC35FEA1EE4EB }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_A243F752CDFD4CDDA5B3E0A5680AE856 }}

      - name: Set Python runtime stack explicitly
        run: |
          az webapp config set \
            --resource-group DefaultResourceGroup-WEU \
            --name myAIBotAppService \
            --generic-configurations "{\"linuxFxVersion\": \"PYTHON|3.9\"}"
        

      - name: 'Deploy using Zip Deploy'
        run: |
          az webapp deploy --resource-group DefaultResourceGroup-WEU \
                          --name myAIBotAppService \
                          --src-path release.zip \
                          --type zip
          